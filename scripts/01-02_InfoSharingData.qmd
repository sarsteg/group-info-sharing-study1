---
title: "informationSharingData"
format: html
---

```{r}
filtered_data <- readRDS("../artifacts/filtered_data.rds")
codebook <- readRDS("../artifacts/codebook.rds")
source("../_common.R")
```

```{r}
library(purrr)
library(stringr)
```

Control check is at the end because of when the dataframe was created: Check to see if any of the control variables were different between the groups.

### \*GEE Model

about this test: <https://bookdown.org/drki_musa/dataanalysis/poisson-regression.html>

#### create dataframe

```{r}
# geepack
# Data needs to be modified to long format

# Between variables should be factors
# Check structure
str(filtered_data$structure)
str(filtered_data$motivation)
str(filtered_data$Q14.1)
```

```{r}
# Limit data
gee_wide <- filtered_data %>% 
  dplyr::select(
    "ResponseId",
    "structure",
    "motivation", 
    "public_more_withheld",
    "public_more_shared",
    "public_more_distort",
    "public_less_withheld",
    "public_less_shared",
    "public_less_distort",
    "private_more_withheld",
    "private_more_shared",
    "private_more_distort",
    "private_less_withheld",
    "private_less_shared",
    "private_less_distort",
    "Q14.1",
    "sex",
    "SES_mean",
    "structure_number01", 
    "motivation_number01", 
    "NeedCog_Mean", 
    "DirtyDozen_Narcissism",
    "DirtyDozen_Psychopathy",
    "DirtyDozen_Machiavellianism",
    "DirtyDozen_Mean",
    "SVO_angle",
    "Manipulation_Mean",
    "hispanic"
  )

gee_long <- gee_wide %>% 
  pivot_longer(
    cols = matches("^(public|private)_(more|less)_(shared|withheld|distort)$"),
    names_to = "Condition",
    values_to = "Count"
  ) %>%
  separate(
    col = Condition,
    into = c("InfoType", "InfoImportance", "Behavior"),
    sep = "_"
  )

gee_long <- gee_long %>% 
  mutate(
    # Repeated-measure factors
    InfoType        = factor(InfoType,        levels = c("public", "private")),
    InfoImportance  = factor(InfoImportance,  levels = c("less", "more")),   
    Behavior        = factor(Behavior,        levels = c("shared","withheld","distort")),
    # Manipulations
    structure       = factor(structure),      
    motivation      = factor(motivation),
    # ID and controls
    ResponseId      = factor(ResponseId),
    Age             = as.numeric(Q14.1),      
    Sex             = factor(sex),           
    SES_mean        = as.numeric(SES_mean),
    NeedCog_Mean    = as.numeric(NeedCog_Mean),
    DirtyDozen_Narcissism       = as.numeric(DirtyDozen_Narcissism),
    DirtyDozen_Psychopathy      = as.numeric(DirtyDozen_Psychopathy),
    DirtyDozen_Machiavellianism = as.numeric(DirtyDozen_Machiavellianism),
    SVO_angle       = as.numeric(SVO_angle)
  )


gee_long <- gee_long %>% 
  mutate(Behavior = droplevels(Behavior))

# View(gee_long)
```

##### gee_long_all_bx

```{r}
# Create dataframe with all of the bx
gee_long_all_bx <- gee_long

saveRDS(gee_long_all_bx, "../artifacts/gee_long_all_bx.rds")
```

##### gee_long_non

```{r}
# Create dataframe with only distort and withhold
gee_long_non <- gee_long %>%
  filter(Behavior != "shared")

gee_long_non <- gee_long_non %>% 
  mutate(Behavior = droplevels(Behavior))

saveRDS(gee_long_non, "../artifacts/gee_long_non.rds")
```

##### gee_long_shared

```{r}
# Create dataframe with only shared
gee_long_shared <- gee_long %>%
  filter(Behavior == "shared")

gee_long_shared <- gee_long_shared %>% 
  mutate(Behavior = droplevels(Behavior))

# str(gee_long_shared)
# View(gee_long_shared)

saveRDS(gee_long_shared, "../artifacts/gee_long_shared.rds")
```

```{r}
colnames(gee_long)

str(gee_long)

colSums(is.na(gee_long))
```

### descriptives

```{r}
vars_info_sharing_bx <- c(
  "public_less_shared",
  "public_more_shared",
  "private_less_shared",
  "private_more_shared",

  "public_less_withheld",
  "public_more_withheld",
  "private_less_withheld",
  "private_more_withheld",

  "public_less_distort",
  "public_more_distort",
  "private_less_distort",
  "private_more_distort"
)
```

```{r}
# SD and Means for all behaviors
info_sharing_bx_summary <- summarise_numeric(filtered_data, vars_info_sharing_bx)

info_sharing_bx_summary <- info_sharing_bx_summary %>%
  mutate(variable = factor(variable, levels = vars_info_sharing_bx)) %>%
  arrange(variable)

info_sharing_bx_summary
```

```{r}
infoshare_tbl <- map_dfr(vars_info_sharing_bx, desc_by_cell)
infoshare_tbl
```

```{r}
# 1) Column order you want (edit if you prefer a different order)
cond_order <- c(
  "individual–prosocial",
  "individual–proself",
  "group–prosocial",
  "group–proself"
)

# 2) Row order you want (use your vector, or just keep the existing order)
# If you already have a vector like vars_info_sharing_bx, use that:
var_order <- vars_info_sharing_bx
# Or generate from the data (keeps current order):
# var_order <- unique(infoshare_tbl$variable)
```

```{r}
# 3) Build the APA-style table: one row per variable, columns = conditions, values = "M (SD)"
apa_infoshare <- infoshare_tbl %>%
  mutate(
    # be sure to use the same separator ("–" en dash)
    condition = paste(structure, motivation, sep = "–"),
    condition = factor(condition, levels = cond_order),
    variable  = factor(variable,  levels = var_order),
    cell      = sprintf("%.2f (%.2f)", M, SD)
  ) %>%
  select(variable, condition, cell) %>%
  pivot_wider(names_from = condition, values_from = cell) %>%
  arrange(variable) %>%
  select(variable, any_of(cond_order))

apa_infoshare
```
